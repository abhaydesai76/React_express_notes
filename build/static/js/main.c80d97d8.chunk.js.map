{"version":3,"sources":["Components/Note.js","Components/Notification.js","Components/LoginForm.js","Components/NoteForm.js","Components/Togglable.js","Components/Footer.js","Services/notesService.js","Services/login.js","App.js","index.js"],"names":["Note","note","toggleImportance","label","important","Table","striped","bordered","className","content","Button","variant","onClick","Notification","message","LoginForm","handleSubmit","handleUsernameChange","handlePasswordChange","username","password","onSubmit","id","value","onChange","type","NoteForm","createNote","useState","newNote","setNewNote","Form","event","preventDefault","Control","target","Togglable","React","forwardRef","props","ref","visible","setVisible","hideWhenVisible","display","showWhenVisible","toggleVisibility","useImperativeHandle","style","buttonLabel","children","Footer","color","fontStyle","fontSize","token","getAll","axios","get","then","response","data","create","newObject","a","config","headers","Authorization","post","update","put","setToken","newToken","login","credentials","App","notes","setNotes","showAll","setShowAll","errorMessage","setErrorMessage","setUsername","setPassword","user","name","noteFormRef","createRef","useEffect","noteService","initialNotes","loggedUserJSON","window","localStorage","getItem","JSON","parse","addNote","noteObject","current","returnedNote","concat","handleLogin","loginService","setItem","stringify","setTimeout","notesToShow","filter","map","i","key","find","n","changedNote","catch","error","toggleImportanceOf","ReactDOM","render","document","getElementById"],"mappings":"0QAwBeA,EArBF,SAAC,GAAgC,IAA9BC,EAA6B,EAA7BA,KAAMC,EAAuB,EAAvBA,iBACdC,EAAQF,EAAKG,UACf,qBAAuB,iBAE3B,OACE,kBAACC,EAAA,EAAD,CAAOC,SAAO,EAACC,UAAQ,GACrB,gCACA,+BACE,4BACE,wBAAIC,UAAU,QACZ,8BAAOP,EAAKQ,UAEd,4BACE,kBAACC,EAAA,EAAD,CAAQC,QAAQ,UAAUC,QAASV,GAAmBC,QCFnDU,EAZM,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QACtB,OAAgB,OAAZA,EACK,KAIP,yBAAKN,UAAU,SACZM,ICWQC,EAlBG,SAAC,GAAsF,IAApFC,EAAmF,EAAnFA,aAAcC,EAAqE,EAArEA,qBAAsBC,EAA+C,EAA/CA,qBAAsBC,EAAyB,EAAzBA,SAAUC,EAAe,EAAfA,SACrF,OACI,6BACI,qCAEA,0BAAMC,SAAUL,GACZ,yCACa,2BAAOM,GAAG,WAAWC,MAAOJ,EAAUK,SAAUP,KAE7D,yCACa,2BAAOK,GAAG,WAAWG,KAAK,WAAWF,MAAOH,EAAUI,SAAUN,KAE7E,4BAAQI,GAAG,eAAeG,KAAK,UAA/B,Y,QC6BDC,EAxCE,SAAC,GAAoB,IAAlBC,EAAiB,EAAjBA,WAAiB,EACLC,mBAAS,IADJ,mBAC5BC,EAD4B,KACnBC,EADmB,KAiBnC,OACE,6BACE,iDAEA,kBAACC,EAAA,EAAD,CAAMV,SAdM,SAACW,GACfA,EAAMC,iBACNN,EAAW,CACTlB,QAASoB,EACTzB,WAAW,IAGb0B,EAAW,MAQP,kBAACzB,EAAA,EAAD,KACE,gCACA,+BACE,4BACE,4BACE,kBAAC0B,EAAA,EAAKG,QAAN,CAAcX,MAAOM,EAASL,SAxBvB,SAACQ,GACpBF,EAAWE,EAAMG,OAAOZ,WAyBd,4BACE,kBAACb,EAAA,EAAD,CAAQC,QAAQ,SAASc,KAAK,UAA9B,eCQDW,EAtCGC,IAAMC,YAAW,SAACC,EAAOC,GAAS,IAAD,EACnBZ,oBAAS,GADU,mBAC1Ca,EAD0C,KACjCC,EADiC,KAG3CC,EAAkB,CAAEC,QAASH,EAAU,OAAS,IAChDI,EAAkB,CAAED,QAASH,EAAU,GAAK,QAE5CK,EAAmB,WACvBJ,GAAYD,IASd,OANAM,8BAAoBP,GAAK,WACvB,MAAO,CACLM,uBAKF,6BACE,kBAACzC,EAAA,EAAD,CAAOE,UAAQ,EAACD,SAAO,GACrB,gCACA,+BACE,4BACE,4BACE,yBAAK0C,MAAOL,GACV,kBAACjC,EAAA,EAAD,CAAQC,QAAQ,UAAUC,QAASkC,GAAmBP,EAAMU,cAE9D,yBAAKD,MAAOH,EAAiBrC,UAAU,oBACpC+B,EAAMW,SACP,kBAACxC,EAAA,EAAD,CAAQC,QAAQ,UAAUC,QAASkC,GAAnC,mBCdDK,EAfA,WAOb,OACE,yBAAKH,MAPa,CAClBI,MAAO,QACPC,UAAW,SACXC,SAAU,KAKR,6BACA,4D,gBCPFC,EAAQ,KA4BG,GAAEC,OAtBF,WAEb,OADgBC,IAAMC,IAXR,cAYCC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,SAoBlBC,OAjBb,uCAAG,WAAMC,GAAN,iBAAAC,EAAA,6DACPC,EAAS,CACbC,QAAS,CAAEC,cAAeZ,IAFf,SAKUE,IAAMW,KApBf,aAoB6BL,EAAWE,GALzC,cAKPL,EALO,yBAONA,EAASC,MAPH,2CAAH,sDAiBqBQ,OALlB,SAAC/C,EAAIyC,GAElB,OADgBN,IAAMa,IAAN,UA5BF,aA4BE,YAAwBhD,GAAMyC,GAC/BJ,MAAK,SAAAC,GAAQ,OAAIA,EAASC,SAGFU,SA1BxB,SAAAC,GACfjB,EAAK,iBAAaiB,KCCL,GAAEC,MANN,uCAAG,WAAMC,GAAN,eAAAV,EAAA,sEACaP,IAAMW,KAHjB,aAG+BM,GADjC,cACJd,EADI,yBAGHA,EAASC,MAHN,2CAAH,uDC+JIc,EAvJH,WAAO,IAAD,EACU/C,mBAAS,IADnB,mBACTgD,EADS,KACFC,EADE,OAEcjD,oBAAS,GAFvB,mBAETkD,EAFS,KAEAC,EAFA,OAGwBnD,mBAAS,MAHjC,mBAGToD,EAHS,KAGKC,EAHL,OAIgBrD,mBAAS,IAJzB,mBAITT,EAJS,KAIC+D,EAJD,OAKgBtD,mBAAS,IALzB,mBAKTR,EALS,KAKC+D,EALD,KAOZC,EAAO,CAACC,KAAM,SAClBD,EAAKC,KAAO,QAEZ,IAAMC,EAAcjD,IAAMkD,YAE1BC,qBAAU,WACRC,EACGjC,SACAG,MAAK,SAAA+B,GACJb,EAASa,QAEZ,IAEHF,qBAAU,WACR,IAAMG,EAAiBC,OAAOC,aAAaC,QAAQ,qBACnD,GAAIH,EAAgB,CAClB,IAAMP,EAAOW,KAAKC,MAAML,GAExBF,EAAYlB,SAASa,EAAK7B,UAE3B,IAEH,IAAM0C,EAAU,SAACC,GACfZ,EAAYa,QAAQrD,mBACpB2C,EACG3B,OAAOoC,GACPvC,MAAK,SAAAyC,GACJvB,EAASD,EAAMyB,OAAOD,QAuBtBE,EAAW,uCAAG,WAAOtE,GAAP,eAAAgC,EAAA,6DAClBhC,EAAMC,iBADY,kBAGCsE,EAAa9B,MAAM,CAClCtD,WAAUC,aAJI,OAGZgE,EAHY,OAOhBQ,OAAOC,aAAaW,QAClB,oBAAqBT,KAAKU,UAAUrB,IAGtCK,EAAYlB,SAASa,EAAK7B,OAE1B2B,EAAY,IACZC,EAAY,IAdI,kDAgBhBF,EAAgB,qBAChByB,YAAW,WACTzB,EAAgB,QACf,KAnBa,0DAAH,sDAyCX0B,EAAc7B,EAChBF,EACAA,EAAMgC,QAAO,SAAA3G,GAAI,OAAIA,EAAKG,aAE9B,OACE,6BACE,kBAACC,EAAA,EAAD,CAAOC,SAAO,EAACC,UAAQ,GACrB,+BACE,sCAEF,+BACE,4BACE,kBAAC,EAAD,CAAcO,QAASkE,KAEzB,4BACE,4BACU,OAATI,EAjCT,kBAAC,EAAD,CAAWnC,YAAY,SACrB,kBAAC,EAAD,CACE9B,SAAUA,EACVC,SAAUA,EACVH,qBAAsB,gBAAGkB,EAAH,EAAGA,OAAH,OAAgB+C,EAAY/C,EAAOZ,QACzDL,qBAAsB,gBAAGiB,EAAH,EAAGA,OAAH,OAAgBgD,EAAYhD,EAAOZ,QACzDP,aAAcsF,KA6BR,6BACE,2BAAIlB,EAAKC,KAAT,cAxBZ,kBAAC,EAAD,CAAWpC,YAAY,WAAWT,IAAK8C,GACrC,kBAAC,EAAD,CAAU3D,WAAYsE,QA6BlB,4BACI,4BACA,6BACE,kBAACvF,EAAA,EAAD,CAAQE,QAAS,kBAAMmE,GAAYD,KAAnC,QACQA,EAAU,YAAc,UAKtC,4BACC6B,EAAYE,KAAI,SAAC5G,EAAM6G,GAAP,OACjB,4BACE,4BACE,kBAAC,EAAD,CACEC,IAAKD,EACL7G,KAAMA,EACNC,iBAAkB,kBArGL,SAACoB,GAC1B,IAAMrB,EAAO2E,EAAMoC,MAAK,SAAAC,GAAC,OAAIA,EAAE3F,KAAOA,KAChC4F,EAAW,eAAQjH,EAAR,CAAcG,WAAYH,EAAKG,YAEhDqF,EACGpB,OAAO/C,EAAI4F,GACXvD,MAAK,SAAAyC,GACJvB,EAASD,EAAMiC,KAAI,SAAA5G,GAAI,OAAIA,EAAKqB,KAAOA,EAAKrB,EAAOmG,SAEpDe,OAAM,SAAAC,GACLnC,EAAgB,SAAD,OACJhF,EAAKQ,QADD,sCAGfiG,YAAW,WACTzB,EAAgB,QACf,QAsF6BoC,CAAmBpH,EAAKqB,cAMxD,kBAAC,EAAD,S,MCpJRgG,IAASC,OAGP,kBAAC,EAAD,MAAQC,SAASC,eAAe,W","file":"static/js/main.c80d97d8.chunk.js","sourcesContent":["import React from 'react'\r\nimport { Table, Form, Button } from 'react-bootstrap'\r\n\r\nconst Note = ({ note, toggleImportance }) => {\r\n  const label = note.important\r\n    ? 'make not important' : 'make important'\r\n\r\n  return (\r\n    <Table striped bordered>\r\n      <thead></thead>\r\n      <tbody>\r\n        <tr>\r\n          <td className='note'>\r\n            <span>{note.content}</span>\r\n          </td>\r\n          <td>\r\n            <Button variant=\"success\" onClick={toggleImportance}>{label}</Button>\r\n          </td>        \r\n        </tr>\r\n    </tbody>\r\n    </Table>\r\n  )\r\n}\r\n\r\nexport default Note","import React from 'react'\r\n\r\nconst Notification = ({ message }) => {\r\n  if (message === null) {\r\n    return null\r\n  }\r\n\r\n  return (\r\n    <div className=\"error\">\r\n      {message}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Notification","import React from 'react'\r\n\r\nconst LoginForm = ({ handleSubmit, handleUsernameChange, handlePasswordChange, username, password }) => {\r\n    return (\r\n        <div>\r\n            <h2>Login</h2>\r\n\r\n            <form onSubmit={handleSubmit}>\r\n                <div>\r\n                    username <input id='username' value={username} onChange={handleUsernameChange} />\r\n                </div>\r\n                <div>\r\n                    password <input id='password' type=\"password\" value={password} onChange={handlePasswordChange} />\r\n                </div>\r\n                <button id='login-button' type=\"submit\">Login</button>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default LoginForm","import React, {useState} from 'react'\r\nimport { Table, Form, Button } from 'react-bootstrap'\r\n\r\nconst NoteForm = ({ createNote }) => {\r\n  const [newNote, setNewNote] = useState('')\r\n\r\n  const handleChange = (event) => {\r\n    setNewNote(event.target.value)\r\n  }\r\n\r\n  const addNote = (event) => {\r\n    event.preventDefault()\r\n    createNote({\r\n      content: newNote,\r\n      important: false,\r\n    })\r\n\r\n    setNewNote('')\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <h2>Create a new note</h2>\r\n\r\n      <Form onSubmit={addNote}>\r\n        <Table>\r\n          <thead></thead>\r\n          <tbody>\r\n            <tr>\r\n              <td>\r\n                <Form.Control value={newNote} onChange={handleChange}/>\r\n              </td>\r\n              <td>\r\n                <Button variant=\"danger\" type=\"submit\">save</Button>\r\n              </td>\r\n            </tr>\r\n          </tbody>\r\n        </Table>\r\n      </Form>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default NoteForm","import React, { useState, useImperativeHandle } from 'react'\r\nimport { Table, Form, Button } from 'react-bootstrap'\r\n\r\nconst Togglable = React.forwardRef((props, ref) => {\r\n  const [visible, setVisible] = useState(false)\r\n\r\n  const hideWhenVisible = { display: visible ? 'none' : '' }\r\n  const showWhenVisible = { display: visible ? '' : 'none' }\r\n\r\n  const toggleVisibility = () => {\r\n    setVisible(!visible)\r\n  }\r\n  \r\n  useImperativeHandle(ref, () => {\r\n    return {\r\n      toggleVisibility\r\n    }\r\n  })\r\n\r\n  return (\r\n    <div>\r\n      <Table bordered striped>\r\n        <thead></thead>\r\n        <tbody>\r\n          <tr>  \r\n            <td>\r\n              <div style={hideWhenVisible}>\r\n                <Button variant=\"success\" onClick={toggleVisibility}>{props.buttonLabel}</Button>\r\n              </div>\r\n              <div style={showWhenVisible} className=\"togglableContent\">\r\n                {props.children}\r\n                <Button variant=\"warning\" onClick={toggleVisibility}>cancel</Button>\r\n              </div>\r\n            </td>            \r\n          </tr>\r\n        </tbody>        \r\n      </Table>\r\n    </div>\r\n  )\r\n})\r\n\r\nexport default Togglable","import React from 'react'\r\n\r\nconst Footer = () => {\r\n  const footerStyle = {\r\n    color: 'green',\r\n    fontStyle: 'italic',\r\n    fontSize: 16\r\n  }\r\n\r\n  return (\r\n    <div style={footerStyle}>\r\n      <br />\r\n      <em>Note app, Abhay Desai 2020</em>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Footer","import axios from 'axios'\r\nconst baseUrl = '/api/notes'\r\n// const baseUrl = 'https://express-nodejs-notes.herokuapp.com/api/notes'\r\n// const baseUrl = 'http://localhost:3001/api/notes'\r\n\r\nlet token = null\r\n\r\nconst setToken = newToken => {\r\n  token = `bearer ${newToken}`\r\n}\r\n\r\nconst getAll = () => {\r\n  const request = axios.get(baseUrl)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nconst create = async newObject => {\r\n  const config = {\r\n    headers: { Authorization: token },\r\n  } \r\n  \r\n  const response = await axios.post(baseUrl, newObject, config)\r\n  \r\n  return response.data\r\n  // const request = axios.post(baseUrl, newObject)\r\n  // return request.then(response => response.data)\r\n}\r\n\r\nconst update = (id, newObject) => {\r\n  const request = axios.put(`${baseUrl}/${id}`, newObject)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nexport default { getAll, create, update, setToken }","import axios from 'axios'\r\nconst baseUrl = '/api/login'\r\n\r\nconst login = async credentials => {\r\n    const response = await axios.post(baseUrl, credentials)\r\n    \r\n    return response.data\r\n}\r\n\r\nexport default { login }","import React, { useState, useEffect } from 'react'\r\nimport { Table, Form, Button } from 'react-bootstrap'\r\nimport Note from './Components/Note'\r\nimport Notification from './Components/Notification'\r\nimport LoginForm from './Components/LoginForm'\r\nimport NoteForm from './Components/NoteForm'\r\nimport Togglable from './Components/Togglable'\r\nimport Footer from './Components/Footer'\r\nimport noteService from './Services/notesService'\r\nimport loginService from './Services/login' \r\n\r\nconst App = () => {\r\n  const [notes, setNotes] = useState([]) \r\n  const [showAll, setShowAll] = useState(true)\r\n  const [errorMessage, setErrorMessage] = useState(null)\r\n  const [username, setUsername] = useState('') \r\n  const [password, setPassword] = useState('')\r\n  // const [user, setUser] = useState(null)\r\n  let user = {name: 'Admin'}\r\n  user.name = 'Admin'\r\n\r\n  const noteFormRef = React.createRef()\r\n\r\n  useEffect(() => {\r\n    noteService\r\n      .getAll()\r\n      .then(initialNotes => {\r\n        setNotes(initialNotes)\r\n      })\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    const loggedUserJSON = window.localStorage.getItem('loggedNoteappUser')\r\n    if (loggedUserJSON) {\r\n      const user = JSON.parse(loggedUserJSON)\r\n      // setUser(user)\r\n      noteService.setToken(user.token)\r\n    }\r\n  }, [])\r\n\r\n  const addNote = (noteObject) => {\r\n    noteFormRef.current.toggleVisibility()\r\n    noteService\r\n      .create(noteObject)\r\n      .then(returnedNote => {     \r\n        setNotes(notes.concat(returnedNote))\r\n      })\r\n  }\r\n\r\n  const toggleImportanceOf = (id) => {\r\n    const note = notes.find(n => n.id === id)\r\n    const changedNote = { ...note, important: !note.important }\r\n  \r\n    noteService\r\n      .update(id, changedNote)\r\n      .then(returnedNote => {\r\n        setNotes(notes.map(note => note.id !== id ? note : returnedNote))\r\n      })\r\n      .catch(error => {\r\n        setErrorMessage(\r\n          `Note '${note.content}' was already removed from server`\r\n        )\r\n        setTimeout(() => {\r\n          setErrorMessage(null)\r\n        }, 5000)   \r\n      })\r\n  }\r\n\r\n  const handleLogin = async (event) => {\r\n    event.preventDefault()\r\n    try {\r\n      let user = await loginService.login({\r\n        username, password,\r\n      })\r\n\r\n      window.localStorage.setItem(\r\n        'loggedNoteappUser', JSON.stringify(user)\r\n      ) \r\n\r\n      noteService.setToken(user.token)\r\n      // setUser(user)\r\n      setUsername('')\r\n      setPassword('')\r\n    } catch (exception) {\r\n      setErrorMessage('wrong credentials')\r\n      setTimeout(() => {\r\n        setErrorMessage(null)\r\n      }, 5000)\r\n    }\r\n  }\r\n\r\n  const loginForm = () => (\r\n    <Togglable buttonLabel='login'>\r\n      <LoginForm\r\n        username={username}\r\n        password={password}\r\n        handleUsernameChange={({ target }) => setUsername(target.value)}\r\n        handlePasswordChange={({ target }) => setPassword(target.value)}\r\n        handleSubmit={handleLogin}\r\n      />\r\n    </Togglable>\r\n  )\r\n\r\n  const noteForm = () => (\r\n    <Togglable buttonLabel='New Note' ref={noteFormRef}>\r\n      <NoteForm createNote={addNote} />\r\n    </Togglable>\r\n  )\r\n\r\n  const notesToShow = showAll\r\n    ? notes\r\n    : notes.filter(note => note.important)\r\n\r\n  return (\r\n    <div>\r\n      <Table striped bordered>\r\n        <thead>\r\n          <h1>Notes</h1>\r\n        </thead>\r\n        <tbody>\r\n          <tr>\r\n            <Notification message={errorMessage} />\r\n          </tr>\r\n          <tr>\r\n            <td>\r\n            {user === null ?\r\n              loginForm() :\r\n              <div>\r\n                <p>{user.name} logged in</p>\r\n                {noteForm()}\r\n              </div>\r\n            }\r\n            </td>\r\n          </tr>\r\n          <tr>            \r\n              <td>\r\n              <div>\r\n                <Button onClick={() => setShowAll(!showAll)}>\r\n                  show {showAll ? 'important' : 'all' }\r\n                </Button>\r\n                </div>\r\n              </td>                          \r\n          </tr>\r\n          <tr>          \r\n          {notesToShow.map((note, i) => \r\n          <tr>\r\n            <td>\r\n              <Note\r\n                key={i}\r\n                note={note} \r\n                toggleImportance={() => toggleImportanceOf(note.id)}\r\n              />\r\n              </td>\r\n            </tr>)}          \r\n          </tr>\r\n        </tbody>\r\n        <Footer />\r\n      </Table>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default App","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport App from './App'\r\nimport './index.css'\r\nimport Phonebook from './Components/Phonebook'\r\nimport Countries from './Components/Countries'\r\nimport Bayzat from './Components/Bayzat'\r\n\r\nReactDOM.render(\r\n  // <Phonebook />,document.getElementById('root'))\r\n  // <Countries />,document.getElementById('root'))\r\n  <App />,document.getElementById('root'))\r\n  // <Bayzat values={6}/>,document.getElementById('root'))\r\n\r\n  // const Logout = (event) => {\r\n  //   event.preventDefault()\r\n  //   window.localStorage.removeItem('loggedNoteappUser')\r\n  //   const user = null\r\n  //   setUser(user)\r\n  // }"],"sourceRoot":""}